@model TrainingWebsite.ViewModels.DashboardViewModel

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" type="text/css" href="~/assets/styles/about.css">
<link rel="stylesheet" type="text/css" href="~/assets/styles/about_responsive.css">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto|Varela+Round">
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
<link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>
<style>
    body {
        margin: 0;
        font-family: "Lato", sans-serif;
    }

    .sidebar {
        margin: 0;
        padding: 0;
        width: 200px;
        background-color: #f1f1f1;
        position: fixed;
        height: 100%;
        overflow: auto;
    }

        .sidebar a {
            display: block;
            color: black;
            padding: 16px;
            text-decoration: none;
        }

            .sidebar a.active {
                background-color: #04AA6D;
                color: white;
            }

            .sidebar a:hover:not(.active) {
                background-color: #555;
                color: white;
            }

    div.content {
        margin-left: 200px;
        padding: 1px 16px;
        height: 1000px;
    }
</style>
<div class="home">
    <div class="breadcrumbs_container">
        <div class="container">
            <div class="row">
                <div class="col">
                    <div class="breadcrumbs">
                        <ul>
                            <li><a href="@Url.Action("Index", "Home")">Home</a></li>
                            <li>DashBoard</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="container">
    <div class="sidebar">
        <a class="active" asp-action="CourseEnrollList">Course Enrolls</a>
        <a href="#news">Result</a>
    </div>

    <div class="content">
        <h4>TraineeCourse</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.courseID)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.courseID)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.TenKhoaHoc)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.TenKhoaHoc)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.TraineeName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.TraineeName)
            </dd>
            @*<dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.ImageTrainer)
            </dt>
            <dd class="col-sm-10">
                <img src="data:image/*;base64,@(Convert.ToBase64String(Model.ImageTrainer))" alt="">
            </dd>*@
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.TraineeLevel)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.TraineeLevel)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.MucTieuKH)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.MucTieuKH)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.HinhThucDanhGia)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.HinhThucDanhGia)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.ErollDate)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.ErollDate)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Status)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Status)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Title)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Title)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.topicList)
            </dt>
        </dl>
        <h3>Session List</h3>
        <table id="dtBasicExample" class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th></th>
                </tr>
            </thead>
            <tbody id="myTable">
                @for (int i = 0; i < Model.topicList.Count(); i++)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(model => model.topicList[i].topicID)
                        </td>
                        <td>
                            @Html.DisplayFor(model => Model.topicList[i].topicName)
                        </td>
                        @Html.HiddenFor(model => model.topicList[i].topicID)
                        @Html.HiddenFor(model => model.topicList[i].topicName)
                        <td>
                            <a href="@Url.Action("View","Dashboard",new { chudeID = Model.topicList[i].topicID})">View</a>
                        </td>
                    </tr>

                }
            </tbody>
        </table>
        <br />
        <h3>Bai Tap</h3>
        @await Component.InvokeAsync("BaiTap", new { courseID = ViewBag.courseID })

    </div>
    <div>
        <a asp-action="Index" class="btn btn-primary">Back to List</a>
    </div>
</div>